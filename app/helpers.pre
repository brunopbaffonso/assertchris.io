<?php

namespace App;

use Amp\Coroutine;
use Carbon\Carbon;
use League\CommonMark\CommonMarkConverter;

use function Amp\File\get;
use function Pre\Phpx\classMatching;
use function Pre\Phpx\functionMatching;
use function Pre\Phpx\Html\propsFrom;
use function Pre\Phpx\Html\render as renderHtml;
use function Pre\Plugin\addMacro;

function render($name, $props = null)
{
    $namespaces = [
        "App\\Component",
    ];

    $props = propsFrom($props);

    if ($function = functionMatching($namespaces, $name)) {
        return call_user_func($function, $props);
    }

    if ($class = classMatching($namespaces, $name)) {
        $instance = new $class($props);

        if (is_callable($instance)) {
            return $instance($props);
        }

        return $instance->render();
    }

    return renderHtml($name, $props);
}

async function getPost($slug)
{
    static $posts;

    if (!$posts) {
        $posts = [];
    }

    if (isset($posts[$slug])) {
        return $posts[$slug];
    }

    $content = await get(.."/../posts/{$slug}.md");
    $parts = explode("---", $content);

    $posts[$slug] = [
        "intro" => $parts[0],
        "introHtml" => getMarkupFromMarkdown($parts[0]),
        "body" => $parts[1],
        "bodyHtml" => getMarkupFromMarkdown($parts[1]),
    ];

    return $posts[$slug];
}

function getMarkupFromMarkdown($markdown)
{
    static $converter;

    if (!$converter) {
        $converter = new CommonMarkConverter();
    }

    return $converter->convertToHtml($markdown);
}

async function getRecentPosts()
{
    static $posts;

    if (!$posts) {
        $posts = [
            [
                "slug" => "2018-10-22-hello-world",
                "date" => new Carbon("2018-10-22"),
                "title" => "Hello world",
                "content" => await getPost("2018-10-22-hello-world"),
            ],
        ];
    }

    return $posts;
}
