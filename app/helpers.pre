<?php

namespace App;

use function Pre\Phpx\classMatching;
use function Pre\Phpx\functionMatching;
use function Pre\Phpx\Html\propsFrom;
use function Pre\Phpx\Html\render as renderHtml;

function render($name, $props = null)
{
    $namespaces = [
        "App\\Component",
    ];

    $props = propsFrom($props);

    if ($function = functionMatching($namespaces, $name)) {
        return call_user_func($function, $props);
    }

    if ($class = classMatching($namespaces, $name)) {
        $instance = new $class($props);

        if (is_callable($instance)) {
            return $instance($props);
        }

        return $instance->render();
    }

    return renderHtml($name, $props);
}

function startsWith($haystack, $needle)
{
     $length = strlen($needle);
     return (substr($haystack, 0, $length) === $needle);
}

function endsWith($haystack, $needle)
{
    $length = strlen($needle);
    if ($length == 0) {
        return true;
    }

    return (substr($haystack, -$length) === $needle);
}

function sortAscending($items)
{
    $clone = (array) $items;
    sort($clone, SORT_NATURAL);
    return $clone;
}

function sortDescending($items)
{
    return array_reverse(sortAscending($items));
}
